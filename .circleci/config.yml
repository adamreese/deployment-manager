version: 2
jobs:
  build:
    working_directory: /go/src/k8s.io/helm
    parallelism: 4
    docker:
      - image: golang:1.10
    environment:
      PROJECT_NAME: "kubernetes-helm"
      DOCKER_VERSION: "17.03.0-ce"
    steps:
      - setup_remote_docker
      - run:
          name: Install Docker client
          command: |
            set -x
            curl -sSL -o "/tmp/docker-${DOCKER_VERSION}.tgz" "https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz"
            tar -xz -C /tmp -f "/tmp/docker-${DOCKER_VERSION}.tgz"
            mv /tmp/docker/* /usr/bin
      - run:
          name: Install socat
          command: apt-get update && apt-get install -y socat
      - checkout
      - setup_remote_docker:
          version: 17.09.0-ce
      - restore_cache:
          keys:
            - glide-{{ checksum "glide.yaml" }}-{{ checksum "glide.lock" }}
            - glide- # used as a fall through if the checksum fails to find exact entry
      - run:
          name: install dependencies
          command: .circleci/bootstrap.sh
      - save_cache:
          key: glide-{{ checksum "glide.yaml" }}-{{ checksum "glide.lock" }}
          paths:
            - /root/.glide  # Where the glide cache is stored
      - run:
          name: test
          command: .circleci/test.sh
      - deploy:
          name: deploy
          command: .circleci/deploy.sh
workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
